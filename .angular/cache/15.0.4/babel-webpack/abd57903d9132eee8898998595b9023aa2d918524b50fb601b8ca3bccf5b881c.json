{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Directive, ViewContainerRef, Input, TemplateRef, NgModule, ComponentFactoryResolver, Injector, ApplicationRef, Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport * as ɵngcc0 from '@angular/core';\nclass TeleportService {\n  constructor() {\n    this.outlets = new BehaviorSubject('');\n    this.asObservable = this.outlets.asObservable();\n    this.ports = new Map();\n  }\n  outlet$(name) {\n    return this.asObservable.pipe(filter(current => current === name), map(name => this.ports.get(name)));\n  }\n  newOutlet(name) {\n    this.outlets.next(name);\n  }\n}\nTeleportService.ɵfac = function TeleportService_Factory(t) {\n  return new (t || TeleportService)();\n};\nTeleportService.ɵprov = i0.ɵɵdefineInjectable({\n  factory: function TeleportService_Factory() {\n    return new TeleportService();\n  },\n  token: TeleportService,\n  providedIn: \"root\"\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TeleportService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\nclass TeleportOutletDirective {\n  constructor(vcr, service) {\n    this.vcr = vcr;\n    this.service = service;\n  }\n  ngOnInit() {\n    this.service.ports.set(this.teleportOutlet, this.vcr);\n    this.service.newOutlet(this.teleportOutlet);\n  }\n  ngOnDestroy() {\n    this.service.ports.delete(this.teleportOutlet);\n  }\n}\nTeleportOutletDirective.ɵfac = function TeleportOutletDirective_Factory(t) {\n  return new (t || TeleportOutletDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(TeleportService));\n};\nTeleportOutletDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: TeleportOutletDirective,\n  selectors: [[\"\", \"teleportOutlet\", \"\"]],\n  inputs: {\n    teleportOutlet: \"teleportOutlet\"\n  }\n});\nTeleportOutletDirective.ctorParameters = () => [{\n  type: ViewContainerRef\n}, {\n  type: TeleportService\n}];\nTeleportOutletDirective.propDecorators = {\n  teleportOutlet: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TeleportOutletDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[teleportOutlet]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: TeleportService\n    }];\n  }, {\n    teleportOutlet: [{\n      type: Input\n    }]\n  });\n})();\nclass TeleportDirective {\n  constructor(tpl, service) {\n    this.tpl = tpl;\n    this.service = service;\n  }\n  ngOnInit() {\n    this.subscription = this.service.outlet$(this.teleportTo).subscribe(outlet => {\n      if (outlet) {\n        this.viewRef = outlet.createEmbeddedView(this.tpl);\n      }\n    });\n  }\n  ngOnDestroy() {\n    var _a, _b;\n    (_a = this.subscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n    (_b = this.viewRef) === null || _b === void 0 ? void 0 : _b.destroy();\n  }\n}\nTeleportDirective.ɵfac = function TeleportDirective_Factory(t) {\n  return new (t || TeleportDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(TeleportService));\n};\nTeleportDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: TeleportDirective,\n  selectors: [[\"\", \"teleportTo\", \"\"]],\n  inputs: {\n    teleportTo: \"teleportTo\"\n  }\n});\nTeleportDirective.ctorParameters = () => [{\n  type: TemplateRef\n}, {\n  type: TeleportService\n}];\nTeleportDirective.propDecorators = {\n  teleportTo: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TeleportDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[teleportTo]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }, {\n      type: TeleportService\n    }];\n  }, {\n    teleportTo: [{\n      type: Input\n    }]\n  });\n})();\nclass TeleportModule {}\nTeleportModule.ɵfac = function TeleportModule_Factory(t) {\n  return new (t || TeleportModule)();\n};\nTeleportModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: TeleportModule\n});\nTeleportModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TeleportModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [TeleportDirective, TeleportOutletDirective],\n      exports: [TeleportDirective, TeleportOutletDirective]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TeleportModule, {\n    declarations: [TeleportDirective, TeleportOutletDirective],\n    exports: [TeleportDirective, TeleportOutletDirective]\n  });\n})();\nfunction isTemplateRef(value) {\n  return value instanceof TemplateRef;\n}\nfunction isComponent(value) {\n  return typeof value === 'function';\n}\nfunction isString(value) {\n  return typeof value === 'string';\n}\nclass TplRef {\n  constructor(args) {\n    this.args = args;\n    this.wrapper = null;\n    if (this.args.vcr) {\n      this.viewRef = this.args.vcr.createEmbeddedView(this.args.tpl, this.args.context || {});\n      this.viewRef.detectChanges();\n    } else {\n      this.viewRef = this.args.tpl.createEmbeddedView(this.args.context || {});\n      this.viewRef.detectChanges();\n      this.args.appRef.attachView(this.viewRef);\n    }\n  }\n  detectChanges() {\n    this.viewRef.detectChanges();\n  }\n  getElement() {\n    const rootNodes = this.viewRef.rootNodes;\n    if (rootNodes.length === 1 && rootNodes[0] === Node.ELEMENT_NODE) {\n      this.element = rootNodes[0];\n    } else {\n      this.element = document.createElement('div');\n      this.element.append(...rootNodes);\n    }\n    return this.element;\n  }\n  destroy() {\n    var _a;\n    if (this.viewRef.rootNodes[0] !== 1) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.parentNode.removeChild(this.element);\n      this.element = null;\n    }\n    if (!this.args.vcr) {\n      this.args.appRef.detachView(this.viewRef);\n    }\n    this.viewRef.destroy();\n    this.viewRef = null;\n  }\n}\nclass StringRef {\n  constructor(value) {\n    this.value = value;\n  }\n  getElement() {\n    return this.value;\n  }\n  detectChanges() {}\n  destroy() {}\n}\nclass CompRef {\n  constructor(args) {\n    this.args = args;\n    const factory = this.args.resolver.resolveComponentFactory(this.args.component);\n    if (this.args.vcr) {\n      this.compRef = this.args.vcr.createComponent(factory, this.args.vcr.length, args.injector || this.args.vcr.injector);\n    } else {\n      this.compRef = factory.create(this.args.injector);\n      this.args.appRef.attachView(this.compRef.hostView);\n    }\n  }\n  get ref() {\n    return this.compRef;\n  }\n  setInput(input, value) {\n    this.compRef.instance[input] = value;\n    return this;\n  }\n  setInputs(inputs) {\n    Object.keys(inputs).forEach(input => {\n      this.compRef.instance[input] = inputs[input];\n    });\n    return this;\n  }\n  detectChanges() {\n    this.compRef.hostView.detectChanges();\n    return this;\n  }\n  appendTo(container) {\n    container.appendChild(this.getElement());\n    return this;\n  }\n  removeFrom(container) {\n    container.removeChild(this.getElement());\n    return this;\n  }\n  getRawContent() {\n    return this.getElement().outerHTML;\n  }\n  getElement() {\n    return this.compRef.location.nativeElement;\n  }\n  destroy() {\n    this.compRef.destroy();\n    !this.args.vcr && this.args.appRef.detachView(this.compRef.hostView);\n    this.compRef = null;\n  }\n}\nclass ViewService {\n  constructor(resolver, injector, appRef) {\n    this.resolver = resolver;\n    this.injector = injector;\n    this.appRef = appRef;\n  }\n  createComponent(component, options = {}) {\n    return new CompRef({\n      component,\n      vcr: options.vcr,\n      injector: options.injector || this.injector,\n      appRef: this.appRef,\n      resolver: this.resolver\n    });\n  }\n  createTemplate(tpl, options = {}) {\n    return new TplRef({\n      vcr: options.vcr,\n      appRef: this.appRef,\n      tpl,\n      context: options.context\n    });\n  }\n  createView(content, viewOptions = {}) {\n    if (isTemplateRef(content)) {\n      return this.createTemplate(content, viewOptions);\n    } else if (isComponent(content)) {\n      return this.createComponent(content, viewOptions);\n    } else if (isString(content)) {\n      return new StringRef(content);\n    } else {\n      throw 'Type of content is not supported';\n    }\n  }\n}\nViewService.ɵfac = function ViewService_Factory(t) {\n  return new (t || ViewService)(ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc0.ApplicationRef));\n};\nViewService.ɵprov = i0.ɵɵdefineInjectable({\n  factory: function ViewService_Factory() {\n    return new ViewService(i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(i0.INJECTOR), i0.ɵɵinject(i0.ApplicationRef));\n  },\n  token: ViewService,\n  providedIn: \"root\"\n});\nViewService.ctorParameters = () => [{\n  type: ComponentFactoryResolver\n}, {\n  type: Injector\n}, {\n  type: ApplicationRef\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ViewService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: ɵngcc0.ApplicationRef\n    }];\n  }, null);\n})();\nclass DynamicViewComponent {}\nDynamicViewComponent.ɵfac = function DynamicViewComponent_Factory(t) {\n  return new (t || DynamicViewComponent)();\n};\nDynamicViewComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: DynamicViewComponent,\n  selectors: [[\"dynamic-view\"]],\n  inputs: {\n    content: \"content\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"innerHTML\"]],\n  template: function DynamicViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelement(0, \"div\", 0);\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"innerHTML\", ctx.content, ɵngcc0.ɵɵsanitizeHtml);\n    }\n  },\n  encapsulation: 2\n});\nDynamicViewComponent.propDecorators = {\n  content: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicViewComponent, [{\n    type: Component,\n    args: [{\n      selector: 'dynamic-view',\n      template: ` <div [innerHTML]=\"content\"></div> `\n    }]\n  }], null, {\n    content: [{\n      type: Input\n    }]\n  });\n})();\nclass DynamicViewDirective {\n  constructor(defaultTpl, vcr, viewService) {\n    this.defaultTpl = defaultTpl;\n    this.vcr = vcr;\n    this.viewService = viewService;\n  }\n  set view(content) {\n    this._view = content;\n    this.resolveContentType();\n  }\n  get view() {\n    return this._view;\n  }\n  ngOnInit() {\n    this.resolveContentType();\n  }\n  resolveContentType() {\n    var _a;\n    (_a = this.viewRef) === null || _a === void 0 ? void 0 : _a.destroy();\n    if (isString(this.view)) {\n      this.viewRef = this.viewService.createComponent(DynamicViewComponent, {\n        vcr: this.vcr,\n        injector: this.injector\n      });\n      this.viewRef.setInput('content', this.view).detectChanges();\n    } else {\n      this.viewRef = this.viewService.createView(this.view || this.defaultTpl, {\n        vcr: this.vcr,\n        injector: this.injector,\n        context: this.context\n      });\n    }\n  }\n  ngOnDestroy() {\n    var _a;\n    (_a = this.viewRef) === null || _a === void 0 ? void 0 : _a.destroy();\n  }\n}\nDynamicViewDirective.ɵfac = function DynamicViewDirective_Factory(t) {\n  return new (t || DynamicViewDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ViewService));\n};\nDynamicViewDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: DynamicViewDirective,\n  selectors: [[\"\", \"dynamicView\", \"\"]],\n  inputs: {\n    view: [\"dynamicView\", \"view\"],\n    injector: [\"dynamicViewInjector\", \"injector\"],\n    context: [\"dynamicViewContext\", \"context\"]\n  }\n});\nDynamicViewDirective.ctorParameters = () => [{\n  type: TemplateRef\n}, {\n  type: ViewContainerRef\n}, {\n  type: ViewService\n}];\nDynamicViewDirective.propDecorators = {\n  view: [{\n    type: Input,\n    args: ['dynamicView']\n  }],\n  injector: [{\n    type: Input,\n    args: ['dynamicViewInjector']\n  }],\n  context: [{\n    type: Input,\n    args: ['dynamicViewContext']\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicViewDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[dynamicView]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ViewService\n    }];\n  }, {\n    view: [{\n      type: Input,\n      args: ['dynamicView']\n    }],\n    injector: [{\n      type: Input,\n      args: ['dynamicViewInjector']\n    }],\n    context: [{\n      type: Input,\n      args: ['dynamicViewContext']\n    }]\n  });\n})();\nclass DynamicViewModule {}\nDynamicViewModule.ɵfac = function DynamicViewModule_Factory(t) {\n  return new (t || DynamicViewModule)();\n};\nDynamicViewModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: DynamicViewModule\n});\nDynamicViewModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicViewModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [DynamicViewDirective, DynamicViewComponent],\n      exports: [DynamicViewDirective]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DynamicViewModule, {\n    declarations: [DynamicViewDirective, DynamicViewComponent],\n    exports: [DynamicViewDirective]\n  });\n})();\n\n/*\n * Public API Surface of overview\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CompRef, DynamicViewDirective, DynamicViewModule, StringRef, TeleportDirective, TeleportModule, TeleportOutletDirective, TplRef, ViewService, isComponent, isString, isTemplateRef, TeleportService as ɵa, DynamicViewComponent as ɵb };","map":{"version":3,"names":["i0","Injectable","Directive","ViewContainerRef","Input","TemplateRef","NgModule","ComponentFactoryResolver","Injector","ApplicationRef","Component","BehaviorSubject","filter","map","ɵngcc0","TeleportService","constructor","outlets","asObservable","ports","Map","outlet$","name","pipe","current","get","newOutlet","next","ɵfac","TeleportService_Factory","t","ɵprov","ɵɵdefineInjectable","factory","token","providedIn","ngDevMode","ɵsetClassMetadata","type","args","TeleportOutletDirective","vcr","service","ngOnInit","set","teleportOutlet","ngOnDestroy","delete","TeleportOutletDirective_Factory","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","selectors","inputs","ctorParameters","propDecorators","selector","TeleportDirective","tpl","subscription","teleportTo","subscribe","outlet","viewRef","createEmbeddedView","_a","_b","unsubscribe","destroy","TeleportDirective_Factory","TeleportModule","TeleportModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","declarations","exports","ngJitMode","ɵɵsetNgModuleScope","isTemplateRef","value","isComponent","isString","TplRef","wrapper","context","detectChanges","appRef","attachView","getElement","rootNodes","length","Node","ELEMENT_NODE","element","document","createElement","append","parentNode","removeChild","detachView","StringRef","CompRef","resolver","resolveComponentFactory","component","compRef","createComponent","injector","create","hostView","ref","setInput","input","instance","setInputs","Object","keys","forEach","appendTo","container","appendChild","removeFrom","getRawContent","outerHTML","location","nativeElement","ViewService","options","createTemplate","createView","content","viewOptions","ViewService_Factory","ɵɵinject","INJECTOR","DynamicViewComponent","DynamicViewComponent_Factory","ɵcmp","ɵɵdefineComponent","decls","vars","consts","template","DynamicViewComponent_Template","rf","ctx","ɵɵelement","ɵɵproperty","ɵɵsanitizeHtml","encapsulation","DynamicViewDirective","defaultTpl","viewService","view","_view","resolveContentType","DynamicViewDirective_Factory","DynamicViewModule","DynamicViewModule_Factory","ɵa","ɵb"],"sources":["C:/Users/HoussemABASSI/authApp/node_modules/@ngneat/overview/__ivy_ngcc__/fesm2015/ngneat-overview.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Directive, ViewContainerRef, Input, TemplateRef, NgModule, ComponentFactoryResolver, Injector, ApplicationRef, Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport * as ɵngcc0 from '@angular/core';\nclass TeleportService {\n    constructor() {\n        this.outlets = new BehaviorSubject('');\n        this.asObservable = this.outlets.asObservable();\n        this.ports = new Map();\n    }\n    outlet$(name) {\n        return this.asObservable.pipe(filter(current => current === name), map(name => this.ports.get(name)));\n    }\n    newOutlet(name) {\n        this.outlets.next(name);\n    }\n}\nTeleportService.ɵfac = function TeleportService_Factory(t) { return new (t || TeleportService)(); };\nTeleportService.ɵprov = i0.ɵɵdefineInjectable({ factory: function TeleportService_Factory() { return new TeleportService(); }, token: TeleportService, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TeleportService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\n\nclass TeleportOutletDirective {\n    constructor(vcr, service) {\n        this.vcr = vcr;\n        this.service = service;\n    }\n    ngOnInit() {\n        this.service.ports.set(this.teleportOutlet, this.vcr);\n        this.service.newOutlet(this.teleportOutlet);\n    }\n    ngOnDestroy() {\n        this.service.ports.delete(this.teleportOutlet);\n    }\n}\nTeleportOutletDirective.ɵfac = function TeleportOutletDirective_Factory(t) { return new (t || TeleportOutletDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(TeleportService)); };\nTeleportOutletDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: TeleportOutletDirective, selectors: [[\"\", \"teleportOutlet\", \"\"]], inputs: { teleportOutlet: \"teleportOutlet\" } });\nTeleportOutletDirective.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: TeleportService }\n];\nTeleportOutletDirective.propDecorators = {\n    teleportOutlet: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TeleportOutletDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[teleportOutlet]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: TeleportService }]; }, { teleportOutlet: [{\n            type: Input\n        }] }); })();\n\nclass TeleportDirective {\n    constructor(tpl, service) {\n        this.tpl = tpl;\n        this.service = service;\n    }\n    ngOnInit() {\n        this.subscription = this.service.outlet$(this.teleportTo).subscribe((outlet) => {\n            if (outlet) {\n                this.viewRef = outlet.createEmbeddedView(this.tpl);\n            }\n        });\n    }\n    ngOnDestroy() {\n        var _a, _b;\n        (_a = this.subscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        (_b = this.viewRef) === null || _b === void 0 ? void 0 : _b.destroy();\n    }\n}\nTeleportDirective.ɵfac = function TeleportDirective_Factory(t) { return new (t || TeleportDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(TeleportService)); };\nTeleportDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: TeleportDirective, selectors: [[\"\", \"teleportTo\", \"\"]], inputs: { teleportTo: \"teleportTo\" } });\nTeleportDirective.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: TeleportService }\n];\nTeleportDirective.propDecorators = {\n    teleportTo: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TeleportDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[teleportTo]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: TeleportService }]; }, { teleportTo: [{\n            type: Input\n        }] }); })();\nclass TeleportModule {\n}\nTeleportModule.ɵfac = function TeleportModule_Factory(t) { return new (t || TeleportModule)(); };\nTeleportModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: TeleportModule });\nTeleportModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TeleportModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [TeleportDirective, TeleportOutletDirective],\n                exports: [TeleportDirective, TeleportOutletDirective]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TeleportModule, { declarations: [TeleportDirective, TeleportOutletDirective], exports: [TeleportDirective, TeleportOutletDirective] }); })();\n\nfunction isTemplateRef(value) {\n    return value instanceof TemplateRef;\n}\nfunction isComponent(value) {\n    return typeof value === 'function';\n}\nfunction isString(value) {\n    return typeof value === 'string';\n}\n\nclass TplRef {\n    constructor(args) {\n        this.args = args;\n        this.wrapper = null;\n        if (this.args.vcr) {\n            this.viewRef = this.args.vcr.createEmbeddedView(this.args.tpl, this.args.context || {});\n            this.viewRef.detectChanges();\n        }\n        else {\n            this.viewRef = this.args.tpl.createEmbeddedView(this.args.context || {});\n            this.viewRef.detectChanges();\n            this.args.appRef.attachView(this.viewRef);\n        }\n    }\n    detectChanges() {\n        this.viewRef.detectChanges();\n    }\n    getElement() {\n        const rootNodes = this.viewRef.rootNodes;\n        if (rootNodes.length === 1 && rootNodes[0] === Node.ELEMENT_NODE) {\n            this.element = rootNodes[0];\n        }\n        else {\n            this.element = document.createElement('div');\n            this.element.append(...rootNodes);\n        }\n        return this.element;\n    }\n    destroy() {\n        var _a;\n        if (this.viewRef.rootNodes[0] !== 1) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.parentNode.removeChild(this.element);\n            this.element = null;\n        }\n        if (!this.args.vcr) {\n            this.args.appRef.detachView(this.viewRef);\n        }\n        this.viewRef.destroy();\n        this.viewRef = null;\n    }\n}\n\nclass StringRef {\n    constructor(value) {\n        this.value = value;\n    }\n    getElement() {\n        return this.value;\n    }\n    detectChanges() { }\n    destroy() { }\n}\n\nclass CompRef {\n    constructor(args) {\n        this.args = args;\n        const factory = this.args.resolver.resolveComponentFactory(this.args.component);\n        if (this.args.vcr) {\n            this.compRef = this.args.vcr.createComponent(factory, this.args.vcr.length, args.injector || this.args.vcr.injector);\n        }\n        else {\n            this.compRef = factory.create(this.args.injector);\n            this.args.appRef.attachView(this.compRef.hostView);\n        }\n    }\n    get ref() {\n        return this.compRef;\n    }\n    setInput(input, value) {\n        this.compRef.instance[input] = value;\n        return this;\n    }\n    setInputs(inputs) {\n        Object.keys(inputs).forEach((input) => {\n            this.compRef.instance[input] = inputs[input];\n        });\n        return this;\n    }\n    detectChanges() {\n        this.compRef.hostView.detectChanges();\n        return this;\n    }\n    appendTo(container) {\n        container.appendChild(this.getElement());\n        return this;\n    }\n    removeFrom(container) {\n        container.removeChild(this.getElement());\n        return this;\n    }\n    getRawContent() {\n        return this.getElement().outerHTML;\n    }\n    getElement() {\n        return this.compRef.location.nativeElement;\n    }\n    destroy() {\n        this.compRef.destroy();\n        !this.args.vcr && this.args.appRef.detachView(this.compRef.hostView);\n        this.compRef = null;\n    }\n}\n\nclass ViewService {\n    constructor(resolver, injector, appRef) {\n        this.resolver = resolver;\n        this.injector = injector;\n        this.appRef = appRef;\n    }\n    createComponent(component, options = {}) {\n        return new CompRef({\n            component,\n            vcr: options.vcr,\n            injector: options.injector || this.injector,\n            appRef: this.appRef,\n            resolver: this.resolver,\n        });\n    }\n    createTemplate(tpl, options = {}) {\n        return new TplRef({\n            vcr: options.vcr,\n            appRef: this.appRef,\n            tpl,\n            context: options.context,\n        });\n    }\n    createView(content, viewOptions = {}) {\n        if (isTemplateRef(content)) {\n            return this.createTemplate(content, viewOptions);\n        }\n        else if (isComponent(content)) {\n            return this.createComponent(content, viewOptions);\n        }\n        else if (isString(content)) {\n            return new StringRef(content);\n        }\n        else {\n            throw 'Type of content is not supported';\n        }\n    }\n}\nViewService.ɵfac = function ViewService_Factory(t) { return new (t || ViewService)(ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc0.ApplicationRef)); };\nViewService.ɵprov = i0.ɵɵdefineInjectable({ factory: function ViewService_Factory() { return new ViewService(i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(i0.INJECTOR), i0.ɵɵinject(i0.ApplicationRef)); }, token: ViewService, providedIn: \"root\" });\nViewService.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: Injector },\n    { type: ApplicationRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ViewService, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.Injector }, { type: ɵngcc0.ApplicationRef }]; }, null); })();\n\nclass DynamicViewComponent {\n}\nDynamicViewComponent.ɵfac = function DynamicViewComponent_Factory(t) { return new (t || DynamicViewComponent)(); };\nDynamicViewComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DynamicViewComponent, selectors: [[\"dynamic-view\"]], inputs: { content: \"content\" }, decls: 1, vars: 1, consts: [[3, \"innerHTML\"]], template: function DynamicViewComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"innerHTML\", ctx.content, ɵngcc0.ɵɵsanitizeHtml);\n    } }, encapsulation: 2 });\nDynamicViewComponent.propDecorators = {\n    content: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicViewComponent, [{\n        type: Component,\n        args: [{\n                selector: 'dynamic-view',\n                template: ` <div [innerHTML]=\"content\"></div> `\n            }]\n    }], null, { content: [{\n            type: Input\n        }] }); })();\n\nclass DynamicViewDirective {\n    constructor(defaultTpl, vcr, viewService) {\n        this.defaultTpl = defaultTpl;\n        this.vcr = vcr;\n        this.viewService = viewService;\n    }\n    set view(content) {\n        this._view = content;\n        this.resolveContentType();\n    }\n    get view() {\n        return this._view;\n    }\n    ngOnInit() {\n        this.resolveContentType();\n    }\n    resolveContentType() {\n        var _a;\n        (_a = this.viewRef) === null || _a === void 0 ? void 0 : _a.destroy();\n        if (isString(this.view)) {\n            this.viewRef = this.viewService.createComponent(DynamicViewComponent, {\n                vcr: this.vcr,\n                injector: this.injector,\n            });\n            this.viewRef.setInput('content', this.view).detectChanges();\n        }\n        else {\n            this.viewRef = this.viewService.createView(this.view || this.defaultTpl, {\n                vcr: this.vcr,\n                injector: this.injector,\n                context: this.context,\n            });\n        }\n    }\n    ngOnDestroy() {\n        var _a;\n        (_a = this.viewRef) === null || _a === void 0 ? void 0 : _a.destroy();\n    }\n}\nDynamicViewDirective.ɵfac = function DynamicViewDirective_Factory(t) { return new (t || DynamicViewDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ViewService)); };\nDynamicViewDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DynamicViewDirective, selectors: [[\"\", \"dynamicView\", \"\"]], inputs: { view: [\"dynamicView\", \"view\"], injector: [\"dynamicViewInjector\", \"injector\"], context: [\"dynamicViewContext\", \"context\"] } });\nDynamicViewDirective.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ViewContainerRef },\n    { type: ViewService }\n];\nDynamicViewDirective.propDecorators = {\n    view: [{ type: Input, args: ['dynamicView',] }],\n    injector: [{ type: Input, args: ['dynamicViewInjector',] }],\n    context: [{ type: Input, args: ['dynamicViewContext',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicViewDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[dynamicView]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }, { type: ViewService }]; }, { view: [{\n            type: Input,\n            args: ['dynamicView']\n        }], injector: [{\n            type: Input,\n            args: ['dynamicViewInjector']\n        }], context: [{\n            type: Input,\n            args: ['dynamicViewContext']\n        }] }); })();\nclass DynamicViewModule {\n}\nDynamicViewModule.ɵfac = function DynamicViewModule_Factory(t) { return new (t || DynamicViewModule)(); };\nDynamicViewModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: DynamicViewModule });\nDynamicViewModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicViewModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [DynamicViewDirective, DynamicViewComponent],\n                exports: [DynamicViewDirective]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DynamicViewModule, { declarations: [DynamicViewDirective, DynamicViewComponent], exports: [DynamicViewDirective] }); })();\n\n/*\n * Public API Surface of overview\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CompRef, DynamicViewDirective, DynamicViewModule, StringRef, TeleportDirective, TeleportModule, TeleportOutletDirective, TplRef, ViewService, isComponent, isString, isTemplateRef, TeleportService as ɵa, DynamicViewComponent as ɵb };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}